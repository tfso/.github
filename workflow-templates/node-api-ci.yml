name: Build
on:
  push:
    tags-ignore:
      - '*'
    branches: 
      - '**'

env:
  REGISTRY: docker.io
  IMAGE_NAME: tfso/
  TFSO_REPO_READ: ${{ secrets.TFSO_REPO_READ }}
  TFSO_REPO_TAG: ${{ secrets.TFSO_REPO_TAG }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
        persist-credentials: false # Only needed if the build need access to other repos

    - name: Setup
      uses: actions/setup-node@v2
      with:
        node-version: 14
        registry-url: 'https://npm.pkg.github.com'
        scope: '@tfso'
        token: ${{ secrets.NPM_TFSO_TOKEN }}


    - name: Create new version
      id: new_tag
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DRY_RUN: true

    - name: Install
      run: |
        git config --global url."https://${{ env.TFSO_REPO_READ }}@github.com/".insteadOf ssh://git@github.com/
        npm ci

    - name: Lint
      run: npm run lint

    - name: Build
      run: npm run build

    - name: Test
      run: npm test

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.IMAGE_NAME }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: ${{ env.IMAGE_NAME }}:${{ steps.new_tag.outputs.new_tag }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Push tag
      if: github.ref == 'refs/heads/main'
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ env.TFSO_REPO_TAG }}
        CUSTOM_TAG: ${{ steps.new_tag.outputs.new_tag }}